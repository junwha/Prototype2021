// Mocks generated by Mockito 5.0.15 from annotations
// in prototype2021/test/map/content_map_model_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:google_maps_flutter/google_maps_flutter.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:prototype2021/loader/google_place/google_place_loader.dart'
    as _i3;
import 'package:prototype2021/model/google_place/place_data.dart' as _i5;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeLatLng_0 extends _i1.Fake implements _i2.LatLng {}

/// A class which mocks [PlaceLoader].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlaceLoader extends _i1.Mock implements _i3.PlaceLoader {
  MockPlaceLoader() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.LatLng get center => (super.noSuchMethod(Invocation.getter(#center),
      returnValue: _FakeLatLng_0()) as _i2.LatLng);
  @override
  set center(_i2.LatLng? _center) =>
      super.noSuchMethod(Invocation.setter(#center, _center),
          returnValueForMissingStub: null);
  @override
  List<dynamic> get types =>
      (super.noSuchMethod(Invocation.getter(#types), returnValue: <dynamic>[])
          as List<dynamic>);
  @override
  set types(List<dynamic>? _types) =>
      super.noSuchMethod(Invocation.setter(#types, _types),
          returnValueForMissingStub: null);
  @override
  void updateCenter(_i2.LatLng? center) =>
      super.noSuchMethod(Invocation.method(#updateCenter, [center]),
          returnValueForMissingStub: null);
  @override
  _i4.Future<_i5.GooglePlaceData?> getOnePlace(_i2.LatLng? latLng,
          {int? radius = 5}) =>
      (super.noSuchMethod(
              Invocation.method(#getOnePlace, [latLng], {#radius: radius}),
              returnValue: Future<_i5.GooglePlaceData?>.value())
          as _i4.Future<_i5.GooglePlaceData?>);
  @override
  _i4.Future<List<_i5.GooglePlaceData>> getGooglePlace(String? type,
          {int? radius = 500}) =>
      (super.noSuchMethod(
              Invocation.method(#getGooglePlace, [type], {#radius: radius}),
              returnValue: Future<List<_i5.GooglePlaceData>>.value(
                  <_i5.GooglePlaceData>[]))
          as _i4.Future<List<_i5.GooglePlaceData>>);
  @override
  _i4.Future<List<_i5.GooglePlaceData>> getGooglePlaces(List<dynamic>? typeList,
          {int? radius = 1000}) =>
      (super.noSuchMethod(
          Invocation.method(#getGooglePlaces, [typeList], {#radius: radius}),
          returnValue: Future<List<_i5.GooglePlaceData>>.value(
              <_i5.GooglePlaceData>[])) as _i4
          .Future<List<_i5.GooglePlaceData>>);
  @override
  List<_i5.GooglePlaceData> parseGooglePlaceData(
          String? jsonString, String? type) =>
      (super.noSuchMethod(
          Invocation.method(#parseGooglePlaceData, [jsonString, type]),
          returnValue: <_i5.GooglePlaceData>[]) as List<_i5.GooglePlaceData>);
  @override
  String toString() => super.toString();
}
